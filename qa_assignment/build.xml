<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="Web_Application">
    <property environment="env"/>
	<property file="build.properties"/>	
    <property name="ECLIPSE_HOME" value="../../Downloads/eclipse-j2ee/eclipse/"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
	<property name="warFileName" value="Web_Application.war"></property>
    <path id="Apache Tomcat v9.0 [Apache Tomcat v9.0].libraryclasspath">
        <pathelement location="${basedir}/lib/ecj-4.15.jar"/>
        <pathelement location="${basedir}/lib/jasper-el.jar"/>
        <pathelement location="${basedir}/lib/tomcat-i18n-de.jar"/>
        <pathelement location="${basedir}/lib/catalina.jar"/>
        <pathelement location="${basedir}/lib/tomcat-i18n-pt-BR.jar"/>
        <pathelement location="${basedir}/lib/servlet-api.jar"/>
        <pathelement location="${basedir}/lib/tomcat-util-scan.jar"/>
        <pathelement location="${basedir}/lib/catalina-ssi.jar"/>
        <pathelement location="${basedir}/lib/tomcat-websocket.jar"/>
        <pathelement location="${basedir}/lib/catalina-ant.jar"/>
        <pathelement location="${basedir}/lib/tomcat-coyote.jar"/>
        <pathelement location="${basedir}/lib/jasper.jar"/>
        <pathelement location="${basedir}/lib/tomcat-jni.jar"/>
        <pathelement location="${basedir}/lib/catalina-storeconfig.jar"/>
        <pathelement location="${basedir}/lib/tomcat-i18n-es.jar"/>
        <pathelement location="${basedir}/lib/catalina-ha.jar"/>
        <pathelement location="${basedir}/lib/websocket-api.jar"/>
        <pathelement location="${basedir}/lib/tomcat-i18n-ru.jar"/>
        <pathelement location="${basedir}/lib/tomcat-i18n-zh-CN.jar"/>
        <pathelement location="${basedir}/lib/tomcat-i18n-ja.jar"/>
        <pathelement location="${basedir}/lib/tomcat-util.jar"/>
        <pathelement location="${basedir}/lib/jsp-api.jar"/>
        <pathelement location="${basedir}/lib/el-api.jar"/>
        <pathelement location="${basedir}/lib/annotations-api.jar"/>
        <pathelement location="${basedir}/lib/tomcat-i18n-cs.jar"/>
        <pathelement location="${basedir}/lib/tomcat-i18n-fr.jar"/>
        <pathelement location="${basedir}/lib/tomcat-i18n-ko.jar"/>
        <pathelement location="${basedir}/lib/catalina-tribes.jar"/>
        <pathelement location="${basedir}/lib/tomcat-jdbc.jar"/>
        <pathelement location="${basedir}/lib/jaspic-api.jar"/>
        <pathelement location="${basedir}/lib/tomcat-dbcp.jar"/>
        <pathelement location="${basedir}/lib/tomcat-api.jar"/>
    </path>
    <path id="Web_Application.classpath">
        <pathelement location="build/classes"/>
        <path refid="Apache Tomcat v9.0 [Apache Tomcat v9.0].libraryclasspath"/>
        <pathelement location="${basedir}/lib/mockito-core-3.3.3-javadoc.jar"/>
        <pathelement location="${basedir}/lib/mockito-core-3.3.3.jar"/>
        <pathelement location="${basedir}/lib//byte-buddy-1.10.5.jar"/>
        <pathelement location="${basedir}/lib//byte-buddy-agent-1.10.5.jar"/>
        <pathelement location="${basedir}/lib//objenesis-2.6.jar"/>
    </path>
    <target name="init">
        <mkdir dir="build/classes"/>
        <copy includeemptydirs="false" todir="build/classes">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete>
        	<fileset dir="build/classes"/>
        	<!-- 删除原有war包。 -->
        	<fileset file="${basedir}/${warFileName}" />
        </delete>	
    	
    </target>
    <target depends="clean, build-project" name="build"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="build/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="Web_Application.classpath"/>
        </javac>
    </target>

    <!-- 定义默认任务，将class文件集合成war包。 -->
    <target depends="clean, build-project" name="build-war">
        <!-- 删除原有war包。 -->
        <delete dir="${basedir}/${warFileName}" />
        <!-- 建立新war包。 -->
        <war destfile="${basedir}/${warFileName}" webxml="${basedir}/WebContent/WEB-INF/web.xml">
            <!-- 将非jar和非class文件拷贝到war包的对应路径下。 -->
            <fileset dir="${basedir}/WebContent">
                <include name="**/**.*" />
                <exclude name="**/*.jar"/>
                <exclude name="**/*.class"/>
            </fileset>
            <!-- 将jar和class文件拷贝到war包的对应路径下。 -->
            <lib dir="${basedir}/lib" />
            <classes dir="${basedir}/build/classes" />
        </war>
    </target>
	
	<target depends = "build-war" name = "deploy-war" description = "Deploy application as a WAR file">
	      <copy todir = "${deploy.path}" preservelastmodified = "true">
	         <fileset dir = "${basedir}">
	            <include name = "*.war"/>
	         </fileset>
	      </copy>
	 </target>	
</project>
